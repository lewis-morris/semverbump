name: Auto release on pyproject version change

on:
  push:
    branches: [ master ]
    paths:
      - pyproject.toml

permissions:
  contents: write       # needed to create tags/releases
  id-token: write       # needed for PyPI Trusted Publishing

concurrency:
  group: "pypi-release"
  cancel-in-progress: false

jobs:
  prepare:
    name: Read version & decide
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.readver.outputs.version }}
      should_release: ${{ steps.decide.outputs.should_release }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0   # we need tags

      - name: Read version from pyproject.toml
        id: readver
        run: |
          python - <<'PY'
          import sys, tomllib, pathlib
          data = tomllib.loads(pathlib.Path("pyproject.toml").read_text('utf-8'))
          # Adjust if your version lives elsewhere:
          ver = data.get("project", {}).get("version")
          if not ver:
            print("::error::project.version not found in pyproject.toml"); sys.exit(1)
          print(f"version={ver}")
          print(f"::set-output name=version::{ver}")
          PY

      - name: Decide if release needed
        id: decide
        run: |
          TAG="v${{ steps.readver.outputs.version }}"
          if git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
            echo "Tag ${TAG} already exists. Skipping release."
            echo "::set-output name=should_release::false"
          else
            echo "No tag ${TAG} found. Releasing."
            echo "::set-output name=should_release::true"
          fi

  tag_and_release:
    name: Tag & GitHub Release
    needs: prepare
    if: needs.prepare.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Create git tag
        env:
          VERSION: ${{ needs.prepare.outputs.version }}
        run: |
          TAG="v${VERSION}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "${TAG}" -m "Release ${TAG}"
          git push origin "${TAG}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          name: v${{ needs.prepare.outputs.version }}
          draft: false
          prerelease: false

  build_and_publish:
    name: Build & publish to PyPI
    needs: [prepare, tag_and_release]
    if: needs.prepare.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/bumpwright
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build distributions
        run: |
          python -m pip install --upgrade pip build
          python -m build

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/